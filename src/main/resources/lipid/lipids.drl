package lipid;

unit LipidScoreUnit;

//-> PG < PE < PI < PA < PS << PC.

// TODO Include here rules and queries to fulfill the practice requirements

// REGLAS POSITIVAS
// This is one example of rules that only prints the factorial combination of all pairs eliminating the A-A combination.
rule "Score 1 for lipid pair with increasing RT and carbon count"
when
    $a1 : /annotations [$rt1 : rtMin, $carbonCount1 : lipid.getCarbonCount(), $doubleBondCount : lipid.getDoubleBondsCount()]
    $a2 : /annotations [this!= $a1, lipid.getDoubleBondsCount() == $doubleBondCount, rtMin > $rt1, lipid.getCarbonCount() > $carbonCount1]
then
    // in this case, the only change is the addition of the score, but the fact does not change so we do not break the principle of refractoriness
    $a1.addScore(1);
    $a2.addScore(1);
    // !! TODO ONLY FOR DEBUGGING
    System.out.println("Scored 1 for annotations: " + $a1 + " and " + $a2);
end


rule "Score 1 for lipid pair with same carbon count and more double bonds with lower RT"
when
    $a1 : /annotations[$rt1 : rtMin, $carbonCount1 : lipid.getCarbonCount(), $lipidType : lipid.getLipidType(), $doubleBonds1 : lipid.getDoubleBondsCount()]
    $a2 : /annotations[this != $a1, lipid.getCarbonCount() == $carbonCount1, lipid.getLipidType() == $lipidType, lipid.getDoubleBondsCount() > $doubleBonds1, rtMin < $rt1]
then
    $a1.addScore(1); $a2.addScore(1);
    System.out.println("Scored 1 for annotations: " + $a1 + " and " + $a2);
end


rule "Score 1 for lipid pair with same carbon and double bonds but elution order by type"
when
    $a1 : /annotations[$rt1 : rtMin, $carbon1 : lipid.getCarbonCount(), $db1 : lipid.getDoubleBondsCount(), $type1 : lipid.getLipidType()]
    $a2 : /annotations[this != $a1, lipid.getCarbonCount() == $carbon1, lipid.getDoubleBondsCount() == $db1, $type2 : lipid.getLipidType(), eval($type2.getPriority() < $type1.getPriority()), rtMin < $rt1]
then
    $a1.addScore(1); $a2.addScore(1);
    System.out.println("Scored 1 for annotations: " + $a1 + " and " + $a2);
end

// REGLAS NEGATIVAS

rule "Subtract 1 if more carbon elutes earlier (violates RT logic)"
when
    $a1 : /annotations[$rt1 : rtMin, $carbonCount1 : lipid.getCarbonCount(), $db : lipid.getDoubleBondsCount(), $type : lipid.getLipidType()]
    $a2 : /annotations[this != $a1, lipid.getDoubleBondsCount() == $db, lipid.getLipidType() == $type, lipid.getCarbonCount() > $carbonCount1, rtMin < $rt1]
then
    $a1.addScore(-1); $a2.addScore(-1);
    System.out.println("Subtracted 1 for inverted RT vs carbon count: " + $a1 + " and " + $a2);
end


rule "Subtract 1 if more double bonds elutes later (violates RT logic)"
when
    $a1 : /annotations[$rt1 : rtMin, $carbon1 : lipid.getCarbonCount(), $db1 : lipid.getDoubleBondsCount(), $type : lipid.getLipidType()]
    $a2 : /annotations[this != $a1, lipid.getCarbonCount() == $carbon1, lipid.getLipidType() == $type, lipid.getDoubleBondsCount() > $db1, rtMin > $rt1]
then
    $a1.addScore(-1); $a2.addScore(-1);
    System.out.println("Subtracted 1 for inverted RT vs double bonds: " + $a1 + " and " + $a2);
end

rule "Subtract 1 if lipid type order is violated (RT contradicts type priority)"
when
    $a1 : /annotations[$rt1 : rtMin, $lipid1 : lipid, $type1 : lipid.getLipidType()]
    $a2 : /annotations[this != $a1, $rt2 : rtMin, $lipid2 : lipid, $type2 : lipid.getLipidType(), eval($type2.getPriority() > $type1.getPriority()),
        eval($rt2 < $rt1)]
then
    $a1.addScore(-1);
    $a2.addScore(-1);
    System.out.println("Subtracted 1 for invalid elution by type order: " + $a1 + " and " + $a2);
end
/*rule "Subtract 1 if lipid type order is violated (RT contradicts type priority)"
when
    $a1 : /annotations[$rt1 : rtMin, $type1 : lipid.getLipidType()]
    $a2 : /annotations[this != $a1, $type2 : lipid.getLipidType(), eval($type2.getPriority() > $type1.getPriority()), rtMin > $rt1]
then
    $a1.addScore(-1); $a2.addScore(-1);
    System.out.println("Subtracted 1 (Rule 6) for invalid elution by type order: " + $a1 + " and " + $a2);
end
*/












